services:
  main:
    depends_on:
      postgres:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile.main
    command: >
      sh -c "npm run reset && npm run prod:main"
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/template
      - ACCESS_SECRET=${ACCESS_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - PORT=3000
      - S3_ACCESS_KEY_ID=minio
      - S3_SECRET_ACCESS_KEY=miniopassword
      - S3_REGION=ru-msk-1
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET_NAME=default

  admin:
    depends_on:
      postgres:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
      main:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile.admin
    command: >
      sh -c "npm run prod:admin"
    ports:
      - 3001:3001
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/template
      - ACCESS_SECRET=${ACCESS_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - PORT_ADMIN=3001
      - S3_ACCESS_KEY_ID=minio
      - S3_SECRET_ACCESS_KEY=miniopassword
      - S3_REGION=ru-msk-1
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET_NAME=default

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: template
      POSTGRES_PORT: 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'template']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopassword
    command: server --console-address ":9001" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      sh -c "
        mc alias set local http://minio:9000 minio miniopassword &&
        mc mb local/default || true &&
        mc policy set public local/default
      "
    restart: on-failure

volumes:
  postgres_data:
  minio_data:
